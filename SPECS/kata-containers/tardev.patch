From b3e71154d3cdc5a3e3033e1c3c504f26dc0d0523 Mon Sep 17 00:00:00 2001
From: Mitch Zhu <mitchzhu@microsoft.com>
Date: Wed, 5 Feb 2025 01:08:34 +0000
Subject: [PATCH] Build pod sandboxing with snapshotter and tarfs

---
 .../node-builder/azure-linux/package_build.sh | 27 ++++++++----------
 .../azure-linux/package_install.sh            | 28 +++++++++----------
 .../azure-linux/package_tools_install.sh      |  7 +++--
 .../node-builder/azure-linux/uvm_build.sh     | 12 ++++----
 .../rootfs-builder/cbl-mariner/config.sh      |  2 +-
 .../static-build/initramfs/Dockerfile         |  2 +-
 6 files changed, 37 insertions(+), 41 deletions(-)

diff --git a/tools/osbuilder/node-builder/azure-linux/package_build.sh b/tools/osbuilder/node-builder/azure-linux/package_build.sh
index 93cedb8554..d427946b43 100755
--- a/tools/osbuilder/node-builder/azure-linux/package_build.sh
+++ b/tools/osbuilder/node-builder/azure-linux/package_build.sh
@@ -47,23 +47,20 @@ fi
 
 pushd "${repo_dir}"
 
-if [ "${CONF_PODS}" == "yes" ]; then
-
-	echo "Building utarfs binary"
-	pushd src/utarfs/
-	make all
-	popd
+echo "Building utarfs binary"
+pushd src/utarfs/
+make all
+popd
 
-	echo "Building kata-overlay binary"
-	pushd src/overlay/
-	make all
-	popd
+echo "Building kata-overlay binary"
+pushd src/overlay/
+make all
+popd
 
-	echo "Building tardev-snapshotter service binary"
-	pushd src/tardev-snapshotter/
-	make all
-	popd
-fi
+echo "Building tardev-snapshotter service binary"
+pushd src/tardev-snapshotter/
+make all
+popd
 
 echo "Building shim binary and configuration"
 pushd src/runtime/
diff --git a/tools/osbuilder/node-builder/azure-linux/package_install.sh b/tools/osbuilder/node-builder/azure-linux/package_install.sh
index ecc2b8bee0..15c542f3b1 100755
--- a/tools/osbuilder/node-builder/azure-linux/package_install.sh
+++ b/tools/osbuilder/node-builder/azure-linux/package_install.sh
@@ -29,16 +29,21 @@ mkdir -p "${PREFIX}/${SHIM_CONFIG_PATH}"
 mkdir -p "${PREFIX}/${DEBUGGING_BINARIES_PATH}"
 mkdir -p "${PREFIX}/${SHIM_BINARIES_PATH}"
 
-if [ "${CONF_PODS}" == "yes" ]; then
-	echo "Installing tardev-snapshotter binaries and service file"
-	mkdir -p ${PREFIX}/usr/sbin
-	cp -a --backup=numbered src/utarfs/target/release/utarfs ${PREFIX}/usr/sbin/mount.tar
-	mkdir -p ${PREFIX}/usr/bin
-	cp -a --backup=numbered src/overlay/target/release/kata-overlay ${PREFIX}/usr/bin/
-	cp -a --backup=numbered src/tardev-snapshotter/target/release/tardev-snapshotter ${PREFIX}/usr/bin/
-	mkdir -p ${PREFIX}/usr/lib/systemd/system/
-	cp -a --backup=numbered src/tardev-snapshotter/tardev-snapshotter.service ${PREFIX}/usr/lib/systemd/system/
+echo "Installing tardev-snapshotter binaries and service file"
+mkdir -p ${PREFIX}/usr/sbin
+cp -a --backup=numbered src/utarfs/target/release/utarfs ${PREFIX}/usr/sbin/mount.tar
+mkdir -p ${PREFIX}/usr/bin
+cp -a --backup=numbered src/overlay/target/release/kata-overlay ${PREFIX}/usr/bin/
+cp -a --backup=numbered src/tardev-snapshotter/target/release/tardev-snapshotter ${PREFIX}/usr/bin/
+mkdir -p ${PREFIX}/usr/lib/systemd/system/
+cp -a --backup=numbered src/tardev-snapshotter/tardev-snapshotter.service ${PREFIX}/usr/lib/systemd/system/
+
+echo "Enabling and starting snapshotter service"
+if [ "${START_SERVICES}" == "yes" ]; then
+	systemctl enable tardev-snapshotter && systemctl daemon-reload && systemctl restart tardev-snapshotter
+fi
 
+if [ "${CONF_PODS}" == "yes" ]; then
 	if [ "${SHIM_REDEPLOY_CONFIG}" == "yes" ]; then
 		echo "Installing SNP shim debug configuration"
 		cp -a --backup=numbered src/runtime/config/"${SHIM_DBG_CONFIG_FILE_NAME}" "${PREFIX}/${SHIM_CONFIG_PATH}"/"${SHIM_DBG_CONFIG_INST_FILE_NAME}"
@@ -51,11 +56,6 @@ if [ "${CONF_PODS}" == "yes" ]; then
 		# which is probably fine when debugging.
 		ln -sf src/runtime/config/"${SHIM_DBG_CONFIG_FILE_NAME}" src/runtime/config/"${SHIM_CONFIG_FILE_NAME}" 
 	fi
-
-	echo "Enabling and starting snapshotter service"
-	if [ "${START_SERVICES}" == "yes" ]; then
-		systemctl enable tardev-snapshotter && systemctl daemon-reload && systemctl restart tardev-snapshotter
-	fi
 fi
 
 echo "Installing diagnosability binaries (monitor, runtime, collect-data script)"
diff --git a/tools/osbuilder/node-builder/azure-linux/package_tools_install.sh b/tools/osbuilder/node-builder/azure-linux/package_tools_install.sh
index 8bf306bce1..6d6417a071 100755
--- a/tools/osbuilder/node-builder/azure-linux/package_tools_install.sh
+++ b/tools/osbuilder/node-builder/azure-linux/package_tools_install.sh
@@ -27,10 +27,10 @@ mkdir -p "${PREFIX}/${UVM_TOOLS_PATH_OSB}/rootfs-builder/cbl-mariner"
 mkdir -p "${PREFIX}/${UVM_TOOLS_PATH_OSB}/image-builder"
 mkdir -p "${PREFIX}/${UVM_TOOLS_PATH_OSB}/node-builder/azure-linux/agent-install/usr/bin"
 mkdir -p "${PREFIX}/${UVM_TOOLS_PATH_OSB}/node-builder/azure-linux/agent-install/usr/lib/systemd/system"
+mkdir -p "${PREFIX}/${UVM_TOOLS_PATH_SRC}/tarfs"
 
 if [ "${CONF_PODS}" == "yes" ]; then
 	mkdir -p "${PREFIX}/${UVM_TOOLS_PATH_SRC}/kata-opa"
-	mkdir -p "${PREFIX}/${UVM_TOOLS_PATH_SRC}/tarfs"
 	mkdir -p "${PREFIX}/${UVM_TOOLS_PATH_OSB}/igvm-builder/azure-linux"
 fi
 
@@ -52,11 +52,12 @@ cp -a --backup=numbered tools/osbuilder/node-builder/azure-linux/agent-install/u
 cp -a --backup=numbered tools/osbuilder/node-builder/azure-linux/agent-install/usr/lib/systemd/system/kata-containers.target "${PREFIX}/${UVM_TOOLS_PATH_OSB}/node-builder/azure-linux/agent-install/usr/lib/systemd/system/"
 cp -a --backup=numbered tools/osbuilder/node-builder/azure-linux/agent-install/usr/lib/systemd/system/kata-agent.service "${PREFIX}/${UVM_TOOLS_PATH_OSB}/node-builder/azure-linux/agent-install/usr/lib/systemd/system/"
 
+cp -a --backup=numbered src/tarfs/Makefile "${PREFIX}/${UVM_TOOLS_PATH_SRC}/tarfs/"
+cp -a --backup=numbered src/tarfs/tarfs.c "${PREFIX}/${UVM_TOOLS_PATH_SRC}/tarfs/"
+
 if [ "${CONF_PODS}" == "yes" ]; then
 	cp -a --backup=numbered src/kata-opa/allow-all.rego "${PREFIX}/${UVM_TOOLS_PATH_SRC}/kata-opa/"
 	cp -a --backup=numbered src/kata-opa/allow-set-policy.rego "${PREFIX}/${UVM_TOOLS_PATH_SRC}/kata-opa/"
-	cp -a --backup=numbered src/tarfs/Makefile "${PREFIX}/${UVM_TOOLS_PATH_SRC}/tarfs/"
-	cp -a --backup=numbered src/tarfs/tarfs.c "${PREFIX}/${UVM_TOOLS_PATH_SRC}/tarfs/"
 	cp -a --backup=numbered tools/osbuilder/igvm-builder/igvm_builder.sh "${PREFIX}/${UVM_TOOLS_PATH_OSB}/igvm-builder/"
 	cp -a --backup=numbered tools/osbuilder/igvm-builder/azure-linux/config.sh "${PREFIX}/${UVM_TOOLS_PATH_OSB}/igvm-builder/azure-linux/"
 	cp -a --backup=numbered tools/osbuilder/igvm-builder/azure-linux/igvm_lib.sh "${PREFIX}/${UVM_TOOLS_PATH_OSB}/igvm-builder/azure-linux/"
diff --git a/tools/osbuilder/node-builder/azure-linux/uvm_build.sh b/tools/osbuilder/node-builder/azure-linux/uvm_build.sh
index 6734277650..75e268eeab 100755
--- a/tools/osbuilder/node-builder/azure-linux/uvm_build.sh
+++ b/tools/osbuilder/node-builder/azure-linux/uvm_build.sh
@@ -29,11 +29,9 @@ if [ "${CONF_PODS}" == "yes" ]; then
 	rootfs_make_flags+=" AGENT_POLICY=yes CONF_GUEST=yes AGENT_POLICY_FILE=${agent_policy_file_abs}"
 fi
 
-if [ "${CONF_PODS}" == "yes" ]; then
-	set_uvm_kernel_vars
-	if [ -z "${UVM_KERNEL_HEADER_DIR}}" ]; then
-		exit 1
-	fi
+set_uvm_kernel_vars
+if [ -z "${UVM_KERNEL_HEADER_DIR}}" ]; then
+	exit 1
 fi
 
 pushd "${repo_dir}"
@@ -49,13 +47,13 @@ echo "Installing agent service files into rootfs"
 sudo cp ${AGENT_INSTALL_DIR}/usr/lib/systemd/system/kata-containers.target ${ROOTFS_PATH}/usr/lib/systemd/system/kata-containers.target
 sudo cp ${AGENT_INSTALL_DIR}/usr/lib/systemd/system/kata-agent.service ${ROOTFS_PATH}/usr/lib/systemd/system/kata-agent.service
 
-if [ "${CONF_PODS}" == "yes" ]; then
-	echo "Building tarfs kernel driver and installing into rootfs"
+echo "Building tarfs kernel driver and installing into rootfs"
 	pushd src/tarfs
 	make KDIR=${UVM_KERNEL_HEADER_DIR}
 	sudo make KDIR=${UVM_KERNEL_HEADER_DIR} KVER=${UVM_KERNEL_VERSION} INSTALL_MOD_PATH=${ROOTFS_PATH} install
 	popd
 
+if [ "${CONF_PODS}" == "yes" ]; then
 	echo "Building dm-verity protected image based on rootfs"
 	pushd tools/osbuilder
 	sudo -E PATH=$PATH make DISTRO=cbl-mariner MEASURED_ROOTFS=yes DM_VERITY_FORMAT=kernelinit image
diff --git a/tools/osbuilder/rootfs-builder/cbl-mariner/config.sh b/tools/osbuilder/rootfs-builder/cbl-mariner/config.sh
index 09f87cc91c..07ae735f1e 100644
--- a/tools/osbuilder/rootfs-builder/cbl-mariner/config.sh
+++ b/tools/osbuilder/rootfs-builder/cbl-mariner/config.sh
@@ -5,7 +5,7 @@
 OS_NAME=cbl-mariner
 OS_VERSION=${OS_VERSION:-3.0}
 LIBC="gnu"
-PACKAGES="kata-packages-uvm"
+PACKAGES="kata-packages-uvm systemd-udev"
 [ "$CONF_GUEST" = yes ] && PACKAGES+=" kata-packages-uvm-coco"
 [ "$AGENT_INIT" = no ] && PACKAGES+=" systemd"
 [ "$SECCOMP" = yes ] && PACKAGES+=" libseccomp"
diff --git a/tools/packaging/static-build/initramfs/Dockerfile b/tools/packaging/static-build/initramfs/Dockerfile
index 9ba6968c2c..b7970b9859 100644
--- a/tools/packaging/static-build/initramfs/Dockerfile
+++ b/tools/packaging/static-build/initramfs/Dockerfile
@@ -56,7 +56,7 @@ RUN apt-get update &&\
     git clone --depth 1 --branch "${cryptsetup_version}" "${cryptsetup_repo}" cryptsetup && \
     pushd cryptsetup && \
     ./autogen.sh && \
-    ./configure  --enable-static --enable-static-cryptsetup --disable-udev --disable-external-tokens --disable-ssh-token && \
+    ./configure  --enable-static --enable-static-cryptsetup --disable-external-tokens --disable-ssh-token && \
     make && make install && \
     strip /usr/sbin/veritysetup.static && \
     popd && \
-- 
2.34.1

